stages:
  - build-composer
  - build-assets
  - test
  - deploy

cache:
  key:
    files:
      - package-lock.json
      - composer.lock
  paths:
    - vendor/
    - node_modules/

variables:
  MYSQL_ROOT_PASSWORD: secret
  MYSQL_DATABASE: "homestead"

build-composer:
  stage: build-composer
  image:
    name: poldixd/php:8.4
    pull_policy: if-not-present
  script:
    - composer install --prefer-dist --no-progress --no-suggest
  artifacts:
    paths:
      - vendor/
    expire_in: 1 hour
    when: always

build-assets:
  stage: build-assets
  image:
    name: node:22
    pull_policy: if-not-present
  dependencies:
    - build-composer
  before_script:
    - npm ci --prefer-offline --no-audit
  script:
    - npm run build
  artifacts:
    paths:
      - public/
    expire_in: 1 hour
    when: always

static_analysis:
  stage: test
  image:
    name: poldixd/php:8.4
    pull_policy: if-not-present
  dependencies:
    - build-composer
  script:
    - ./vendor/bin/phpstan analyse

test:
  stage: test
  image:
    name: poldixd/php:8.4
    pull_policy: if-not-present
  coverage: /^\s*Lines:\s*\d+.\d+\%/
  dependencies:
    - build-composer
    - build-assets
  artifacts:
    paths:
      - ./bootstrap
      - ./storage/logs
      - ./.env
    expire_in: 1 days
    when: on_failure
  before_script:
    - cp .env.example .env
    - touch database/database.sqlite
    - php artisan key:generate
    - php artisan about --only=environment
  script:
    - ./vendor/bin/pest --colors=always --parallel $( [ "$PEST_COVERAGE" = "true" ] && echo "--coverage" ) $( [ "$PEST_BAIL" = "true" ] && echo "--bail" ) $( [ "$PEST_PROFILE" = "true" ] && echo "--profile" )

deploy:
  only:
    - main
  stage: deploy
  image: alpine:3
  dependencies:
    - build-assets
  environment:
    name: staging
    url: https://nils.li/
  before_script:
    - apk add --update openssh-client rsync
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - rsync --version
    - >
      rsync
      -rltzuvOog
      --delete
      --exclude-from=.rsync_exclude
      ./ $SSH_USERNAME@$SSH_HOST:$SSH_PATH
    - >
      ssh -t -t $SSH_USERNAME@$SSH_HOST
      "cd $SSH_PATH &&
      $SSH_PHP_PATH composer.phar self-update &&
      $SSH_PHP_PATH composer.phar install --no-interaction --optimize-autoloader --no-dev &&
      $SSH_PHP_PATH artisan down --retry=60 &&
      $SSH_PHP_PATH artisan optimize:clear &&
      $SSH_PHP_PATH artisan storage:link &&
      $SSH_PHP_PATH artisan migrate --force &&
      $SSH_PHP_PATH artisan optimize &&
      $SSH_PHP_PATH artisan filament:optimize &&
      $SSH_PHP_PATH artisan up &&
      $SSH_PHP_PATH artisan media-library:regenerate --force &&
      exit"
